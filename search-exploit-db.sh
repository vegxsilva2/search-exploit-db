#!/bin/bash

# Variables por defecto
DOWNLOAD_DIR=""


# Verifica que el término de búsqueda haya sido proporcionado
if [ -z "$1" ]; then
  usage
fi

# Termino de búsqueda
SEARCH_TERM=$1

# Si no se especifica un directorio de descarga, usar el directorio actual
if [ -z "$DOWNLOAD_DIR" ]; then
  DOWNLOAD_DIR=$(pwd)
fi

# Crea el directorio de descarga si no existe
mkdir -p "$DOWNLOAD_DIR"

# Realiza la búsqueda con searchsploit y guarda los resultados en un archivo temporal
RESULTS=$(mktemp)
searchsploit "$SEARCH_TERM" > "$RESULTS"

# Muestra los resultados al usuario
cat "$RESULTS"

# Solicita al usuario que seleccione el número del exploit que desea descargar
echo -n "Seleccione el número del exploit que desea descargar: "
read -r USER_EXPLOIT_NUMBER

# Incrementa el número del exploit en 3
EXPLOIT_NUMBER=$((USER_EXPLOIT_NUMBER + 3))

# Extrae la línea correspondiente al número seleccionado
EXPLOIT_LINE=$(sed -n "${EXPLOIT_NUMBER}p" "$RESULTS")

echo "$EXPLOIT_PATH"

# Obtiene la ruta del exploit desde la línea
EXPLOIT_PATH=$(echo "$EXPLOIT_LINE" | awk -F "|" '{print $2}' | sed 's/ //g')

# Verifica si la ruta del exploit fue encontrada
if [ -z "$EXPLOIT_PATH" ]; then
  echo "Número de exploit no válido."
  rm "$RESULTS"
  exit 1
fi

# Descarga el exploit usando searchsploit en el directorio especificado
searchsploit -m "$EXPLOIT_PATH"

# Obtiene el nombre del archivo descargado
EXPLOIT_FILE=$(basename "$EXPLOIT_PATH")

# Mueve el archivo descargado al directorio especificado
mv "./$EXPLOIT_FILE" "$2"

# Elimina el archivo temporal
rm "$RESULTS"